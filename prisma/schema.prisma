// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum Role {
    ADMIN
    USER
}

enum ProjectState {
    PROPOSED
    STARTED
    FINISHED
}

enum TaskState {
    NONE
    WORKING
    REVIEW
    FINISHED
}

enum TaskPriority {
    LOW
    MEDIUM
    HIGH
}

model User {
    id          String    @unique @default(cuid())
    firstName   String
    lastName    String
    email       String    @unique
    avatar      String?
    password    String
    role        Role      @default(USER)
    resetToken  String?
    resetExpire DateTime?
    createdAt   DateTime  @default(now())
}

model ContentProject {
    slug        String   @unique
    name        String
    role        String
    stack       String[]
    description String
    date        String?
    where       String
    images      String[]
    client      String?
    short       String
    outLink     String?
    outLinkText String?
    order       Int @default(0)
}

model Landing {
    page                  String @unique
    title                 String
    tech                  Tech[]
    copy                  String
    imageUrl              String
    firstHighlightHeader  String 
    secondHighlightHeader String 
    thirdHighlightHeader  String 
    firstHighlightIcon    String 
    secondHighlightIcon   String 
    thirdHighlightIcon    String 
    firstHighlightText    String 
    secondHighlightText   String 
    thirdHighlightText    String 
}

model Tech {
    name      String  @unique
    landing   Landing @relation(fields: [landingId], references: [page])
    landingId String
    order     Int?
}

model About {
    page      String @unique
    title     String
    copy      String
    text1     String
    text2     String
    image1Url String
    image2Url String
    image3Url String
    image4Url String
    title1    String
    title2    String
    title3    String
    title4    String
}

model Messages {
    id        String   @unique @default(cuid())
    name      String
    email     String
    message   String
    read      Boolean  @default(false)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Invoice {
    reference   String        @unique
    date        DateTime
    total       Float
    taxYear     String
    paid        Boolean       @default(false)
    client      Client        @relation(fields: [clientId], references: [id])
    clientId    String
    invoiceItem InvoiceItem[]
}

model InvoiceItem {
    id               String  @unique @default(cuid())
    description      String
    quantity         Float
    unitPrice        Float
    subTotal         Float
    invoice          Invoice @relation(fields: [invoiceReference], references: [reference])
    invoiceReference String
}

model Client {
    id       String           @unique @default(cuid())
    name     String
    address  String
    invoices Invoice[]
    project  WorkingProject[]
}

model Expense {
    id          String @unique @default(cuid())
    title       String
    description String
    amount      Float
    taxYear     String
    retailer    String
}

model Overhead {
    id     String @unique @default(cuid())
    name   String
    amount Float
    Date   Int
}

model WorkingProject {
    id       String        @unique @default(cuid())
    name     String
    client   Client        @relation(fields: [clientId], references: [id])
    clientId String
    state    ProjectState  @default(PROPOSED)
    dateDue  DateTime
    tasks    ProjectTask[]
}

model ProjectTask {
    id          String         @unique @default(cuid())
    description String?
    status      TaskState      @default(NONE)
    priority    TaskPriority   @default(LOW)
    project     WorkingProject @relation(fields: [projectId], references: [id])
    projectId   String
}

model ServiceRequest {
    id        String   @unique @default(cuid())
    page      String
    createdAt DateTime @default(now())
}

model Images {
    url       String   @unique
    createdAt DateTime @default(now())
}
